{"metadata":{"role":"article","modules":[{"name":"BlueTriangle"}],"roleHeading":"Article","title":"Using Timers"},"hierarchy":{"paths":[["doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle"]]},"variants":[{"paths":["\/documentation\/bluetriangle\/bttimer"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To measure the duration of a user interaction, initialize a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/Page"},{"type":"text","text":" object describing that interation and pass it to "},{"type":"codeVoice","code":"BlueTriangle\/BlueTriangle\/startTimer(page:timerType:)"},{"type":"text","text":" to receive a running timer instance."}]},{"type":"codeListing","code":["let page = Page(pageName: \"MY_PAGE\")","let timer = BlueTriangle.startTimer(page: page)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to defer the start of the timer, use "},{"type":"codeVoice","code":"BlueTriangle\/BlueTriangle\/makeTimer(page:timerType:)"},{"type":"text","text":" and call the returned timer’s "},{"type":"codeVoice","code":"start()"},{"type":"text","text":" method when you are ready to start timing:"}]},{"type":"codeListing","code":["let page = Page(pageName: \"MY_PAGE\")","let timer = BlueTriangle.makeTimer(page: page)","...","timer.start()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In both cases, pass your timer to "},{"identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/BlueTriangle\/endTimer(_:purchaseConfirmation:)","type":"reference","isActive":true},{"type":"text","text":" to send it to the Blue Triangle server."}]},{"type":"codeListing","code":["BlueTriangle.endTimer(timer)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Running timers are automatically stopped when passed to ","type":"text"},{"identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/BlueTriangle\/endTimer(_:purchaseConfirmation:)","isActive":true,"type":"reference"},{"text":", though you can end timing earlier by calling the timer’s ","type":"text"},{"code":"end()","type":"codeVoice"},{"text":" method.","type":"text"}]},{"type":"codeListing","code":["timer.end()","...","\/\/ You must still pass the timer to `BlueTriangle.endTimer(_:)` to send it to the Blue Triangle server","BlueTriangle.endTimer(timer)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"For timers that are associated with checkout, create a ","type":"text"},{"type":"reference","identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/PurchaseConfirmation","isActive":true},{"text":" object to pass along with the timer to ","type":"text"},{"type":"reference","identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/BlueTriangle\/endTimer(_:purchaseConfirmation:)","isActive":true},{"text":":","type":"text"}]},{"type":"codeListing","code":["timer.end()","let purchaseConfirmation = PurchaseConfirmation(cartValue: 99.00)","BlueTriangle.endTimer(timer, purchaseConfirmation: purchaseConfirmation)"],"syntax":"swift"},{"text":"Timer Types","type":"heading","level":3,"anchor":"Timer-Types"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"BlueTriangle\/BlueTriangle\/makeTimer(page:timerType:)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"BlueTriangle\/BlueTriangle\/startTimer(page:timerType:)"},{"type":"text","text":" have a "},{"type":"codeVoice","code":"timerType"},{"type":"text","text":" parameter to specify the type of the timer they return. By default, both methods return main timers with the type "},{"identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/BTTimer\/TimerType\/main","type":"reference","isActive":true},{"type":"text","text":". When "},{"identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/NetworkCapture","type":"reference","isActive":true},{"type":"text","text":" is enabled, requests made with one of the "},{"type":"codeVoice","code":"bt"},{"type":"text","text":"-prefixed "},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":" methods will be associated with the last main timer to have been started at the time the request completes. It is recommended to only have a single main timer running at any given time. If you need overlapping timers, create additional custom timers by specifying a "},{"identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/BTTimer\/TimerType\/custom","type":"reference","isActive":true},{"type":"text","text":" timer type:"}]},{"type":"codeListing","code":["let mainTimer = BlueTriangle.startTimer(page: Page(pageName: \"MY_PAGE\"))","let customTimer = BlueTriangle.startTimer(page: Page(pageName: \"MY_OTHER_TIMER\"), timerType: .custom)","\/\/ ...","BlueTriangle.endTimer(mainTimer)","\/\/ ...","BlueTriangle.endTimer(customTimer)"],"syntax":"swift"}]}],"sections":[],"abstract":[{"text":"Create timers to measure responses to user interactions.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/BTTimer","interfaceLanguage":"swift"},"references":{"doc://btt-swift-sdk.BlueTriangle/documentation/BlueTriangle/BTTimer/TimerType/custom":{"type":"topic","title":"BTTimer.TimerType.custom","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"custom"}],"url":"\/documentation\/bluetriangle\/bttimer\/timertype\/custom","kind":"symbol","identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/BTTimer\/TimerType\/custom","abstract":[{"text":"A timer used to measure additional interactions.","type":"text"}],"role":"symbol"},"doc://btt-swift-sdk.BlueTriangle/documentation/BlueTriangle/BTTimer/TimerType/main":{"role":"symbol","abstract":[{"type":"text","text":"A timer used to measure primary user interactions and identify captured network requests."}],"type":"topic","title":"BTTimer.TimerType.main","kind":"symbol","identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/BTTimer\/TimerType\/main","url":"\/documentation\/bluetriangle\/bttimer\/timertype\/main","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"main"}]},"doc://btt-swift-sdk.BlueTriangle/documentation/BlueTriangle/NetworkCapture":{"type":"topic","abstract":[{"type":"text","text":"The Blue Triangle SDK supports capturing network requests using either the "},{"code":"NetworkCaptureSessionDelegate","type":"codeVoice"},{"type":"text","text":" or "},{"code":"bt","type":"codeVoice"},{"type":"text","text":"-prefixed "},{"code":"URLSession","type":"codeVoice"},{"type":"text","text":" methods."}],"kind":"article","identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/NetworkCapture","url":"\/documentation\/bluetriangle\/networkcapture","role":"article","title":"Network Capture"},"doc://btt-swift-sdk.BlueTriangle/documentation/BlueTriangle/PurchaseConfirmation":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PurchaseConfirmation"}],"kind":"symbol","url":"\/documentation\/bluetriangle\/purchaseconfirmation","navigatorTitle":[{"kind":"identifier","text":"PurchaseConfirmation"}],"role":"symbol","identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/PurchaseConfirmation","title":"PurchaseConfirmation","abstract":[{"text":"An object describing a purchase confirmation interaction.","type":"text"}]},"doc://btt-swift-sdk.BlueTriangle/documentation/BlueTriangle/Page":{"url":"\/documentation\/bluetriangle\/page","abstract":[{"type":"text","text":"An object describing a user interaction."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/Page","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Page"}],"navigatorTitle":[{"kind":"identifier","text":"Page"}],"title":"Page","role":"symbol"},"doc://btt-swift-sdk.BlueTriangle/documentation/BlueTriangle/BlueTriangle/endTimer(_:purchaseConfirmation:)":{"role":"symbol","url":"\/documentation\/bluetriangle\/bluetriangle\/endtimer(_:purchaseconfirmation:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endTimer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BTTimer","preciseIdentifier":"c:@M@BlueTriangle@objc(cs)BTTimer","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"purchaseConfirmation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PurchaseConfirmation","preciseIdentifier":"c:@M@BlueTriangle@objc(cs)PurchaseConfirmation","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"abstract":[{"text":"Ends a timer and upload it to Blue Triangle for processing.","type":"text"}],"kind":"symbol","type":"topic","title":"endTimer(_:purchaseConfirmation:)","identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle\/BlueTriangle\/endTimer(_:purchaseConfirmation:)"},"doc://btt-swift-sdk.BlueTriangle/documentation/BlueTriangle":{"role":"collection","url":"\/documentation\/bluetriangle","kind":"symbol","title":"BlueTriangle","identifier":"doc:\/\/btt-swift-sdk.BlueTriangle\/documentation\/BlueTriangle","abstract":[{"type":"text","text":"Blue Triangle analytics SDK for iOS."}],"type":"topic"}}}